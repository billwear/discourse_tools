So today, I'm going to talk about the conversion tool I created for my current doc work.  I'm tasked with two outcomes: producing Reader Adaptive Documentation, and being able to generate an offline version of the docs for MAAS installs behind a firewall.  A lot of this is good, old-fashioned, roll-up-your-sleeves writing work -- but the heavy lifting can be done by machines, and that's *always* a good thing.

In this case, I had a few needs:

First, I needed to convert discourse markown to HTML, including repointing the links and downloading images.

Second, I needed to push and pull docs from discourse to a local directory -- both individual files and entire sets -- so that I could do bulk editing, and also to allow me to edit the docs with my favorite editor, emacs, simply for productivity reasons.

Third, I needed to be able to process conditionals in the doc set -- for example, if I'm producing two versions, one for API and one for UI, I'd write paragraphs for both, side-by-side in the doc, and then mark each paragraph with the correct tags.  Then when I publish, I'd want all the API paragraphs to go to the API set, and all the UI paragraphs to go to the UI set.

I should note that much of the docset will still be generic, so it's not all all efficient to maintain multiple, independent sets; only some paragraphs will change in each page.

Fourth, because I was sitting there writing python, I added the capability to push and pull github files to my githubs, which I'm using as temporary backups for some of my experimental docsets.  There's no point even getting buggy doc into discourse to begin with, because try as you might, someone will find it.

Finally, I have some other ideas about features for this tool, unrelated to these particular projects, but I'll talk about them on my personal blog as I add them.

So, without further adieu, let me introduce *xpub*.  It's a python script, and it needs a couple of libraries pip-ed (in most cases), but you can find that in the README on my github.  I'll link to the github below the video.

Rather than give long descriptions, I'll just show you how it works.  Once you've got it installed